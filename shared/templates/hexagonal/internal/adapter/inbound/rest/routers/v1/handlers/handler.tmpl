package handlerv1

import (
	"github.com/gofiber/fiber/v2"
	"{{.PackagePath}}/internal/adapter/inbound/rest/router/v1/response"
	"{{.PackagePath}}/internal/adapter/inbound/rest/router/v1/presenter"
)


{{- if .Annotation}} {{.Annotation}} {{- end}}
func(h *Handler) {{.HandlerName}}() func(c *fiber.Ctx) error {
	return func(c *fiber.Ctx) error {
		{{if .HasService}}
				var (
					ctx = c.UserContext()
					svc = h.services.Get{{.ServiceName}}()
					)
		{{end}}

		payload, err:= new(presenter.{{.HandlerName}}).In(c)
		if err != nil {
			return err
		}

		{{if .HasService}}
				// Transform request into domain model
				{{if .ServiceHasReturn}} result, {{end}}err {{if .ServiceHasReturn}}:{{end}}=  svc.{{.Service.MethodName}}(ctx, payload) 
				if err != nil {
					return err
				}
		{{end}}

		return response.Success(c, {{if .ServiceHasReturn}} result {{else}} "Hello" {{end}})
	}
}
